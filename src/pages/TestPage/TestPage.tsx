import React, { useState } from "react";
import Button from "../../shared/atoms/buttons/Button";
import Label from "../../shared/atoms/labels/Label";
import Icon from "../../shared/atoms/icons/Icon";
import { InputField } from "../../shared/atoms/input-fields/InputField";
import { Modal } from "../../shared/atoms/modal/Modal";
import { MeetingScheduler } from "../../features/meeting_sheduler/MeetingScheduler";
import buttonClasses from "../../shared/atoms/buttons/Button.module.css";
import classes from "./TestPage.module.css";
import { TextInput } from "../../shared/atoms/input-fields/TextInput";
import { EmailInput } from "../../shared/atoms/input-fields/EmailInput";
import { PasswordInput } from "../../shared/atoms/input-fields/PasswordInput";
import { DateInput } from "../../shared/atoms/input-fields/DateInput";
import { DateTimeInput } from "../../shared/atoms/input-fields/DateTimeInput";

export const TestPage: React.FC = () => {
  const [meetingTitle, setMeetingTitle] = useState("");
  const [participants, setParticipants] = useState("");
  const [email, setEmail] = useState("");
  const [textValue, setTextValue] = useState("");
  const [password, setPassword] = useState("");

  const [isMeetingModalOpen, setIsMeetingModalOpen] = useState(false);
  const [isSimpleModalOpen, setIsSimpleModalOpen] = useState(false);

  return (
    <div className={classes.testPage}>
      <header className={classes.header}>
        <h1>üß™ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</h1>
        <p>–ó–¥–µ—Å—å –º—ã —Ç–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–∞—à–∏ –Ω–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã</p>
      </header>

      <div className={classes.content}>
        <section className={classes.section}>
          <h2>üìù –¢–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è (TextField)</h2>
          <div className={classes.componentsGrid}>
            <TextInput
              label="–û–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ"
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç..."
              value={textValue}
              onChange={setTextValue}
            />

            <EmailInput
              label="Email –ø–æ–ª–µ"
              placeholder="user@example.com"
              value={email}
              onChange={setEmail}
              error={
                email && !email.includes("@") ? "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email" : ""
              }
            />

            <PasswordInput
              label="–ü–∞—Ä–æ–ª—å"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
              value={password}
              onChange={setPassword}
            />

            <InputField
              label="–ß–∏—Å–ª–æ–≤–æ–µ –ø–æ–ª–µ"
              type="number"
              placeholder="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ"
              value={participants}
              onChange={setParticipants}
            />

            <InputField
              label="–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ"
              placeholder="–≠—Ç–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ"
              value={meetingTitle}
              onChange={setMeetingTitle}
              required
            />

            <InputField
              label="–û—Ç–∫–ª—é—á–µ–Ω–Ω–æ–µ –ø–æ–ª–µ"
              value="–≠—Ç–æ –ø–æ–ª–µ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å"
              disabled
            />

            <InputField
              label="–û—à–∏–±–æ—á–Ω–æ–µ –ø–æ–ª–µ"
              value={textValue}
              error="Validation fail"
              onChange={setTextValue}
            />

            <DateInput label="–ü–æ–ª–µ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã" />

            <DateTimeInput label="–ü–æ–ª–µ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏" />
          </div>
        </section>

        <section className={classes.section}>
          <h2>üîÑ –ö–Ω–æ–ø–∫–∏</h2>
          <div className={classes.buttonsRow}>
            <Button
              className={buttonClasses.defaultButtonBlue}
              label={<Label text="–û–±—ã—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞" />}
              onClick={() => console.log("–ö–ª–∏–∫!")}
            />

            <Button
              className={buttonClasses.defaultButtonOrange}
              label={<Label text="–ö–Ω–æ–ø–∫–∞ —Å –∏–∫–æ–Ω–∫–æ–π" />}
              icon={<Icon path="/icons/star.svg" />}
              labelPosition="right"
            />

            <Button
              className={buttonClasses.defaultWarningButton}
              label={<Label text="–û–ø–∞—Å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ" />}
            />

            <Button
              className={buttonClasses.defaultButtonBlue}
              label={<Label text="–ù–µ–∞–∫—Ç–∏–≤–Ω–∞—è" />}
              disabled={true}
            />
          </div>
        </section>

        <section className={classes.section}>
          <h2>üéØ –í–∏–¥–∂–µ—Ç—ã –∏ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞</h2>
          <div className={classes.buttonsRow}>
            <Button
              className={buttonClasses.defaultButtonBlue}
              label={<Label text="–û—Ç–∫—Ä—ã—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤—Å—Ç—Ä–µ—á" />}
              icon={<Icon path="/icons/calendar.svg" />}
              onClick={() => setIsMeetingModalOpen(true)}
            />

            <Button
              className={buttonClasses.defaultButtonOrange}
              label={<Label text="–ü—Ä–æ—Å—Ç–∞—è –º–æ–¥–∞–ª–∫–∞" />}
              onClick={() => setIsSimpleModalOpen(true)}
            />
          </div>
        </section>

        <section className={classes.section}>
          <h2>üëÄ –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π</h2>
          <div className={classes.preview}>
            <div className={classes.previewItem}>
              <strong>–¢–µ–∫—Å—Ç:</strong> {textValue || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
            </div>
            <div className={classes.previewItem}>
              <strong>Email:</strong> {email || "–Ω–µ —É–∫–∞–∑–∞–Ω"}
            </div>
            <div className={classes.previewItem}>
              <strong>–ü–∞—Ä–æ–ª—å:</strong> {password ? "‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢" : "–Ω–µ —É–∫–∞–∑–∞–Ω"}
            </div>
            <div className={classes.previewItem}>
              <strong>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</strong> {participants || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
            </div>
            <div className={classes.previewItem}>
              <strong>–ù–∞–∑–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏:</strong> {meetingTitle || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
            </div>
          </div>
        </section>
      </div>

      <Modal
        isOpen={isMeetingModalOpen}
        onClose={() => setIsMeetingModalOpen(false)}
      >
        <MeetingScheduler />
      </Modal>

      <Modal
        isOpen={isSimpleModalOpen}
        onClose={() => setIsSimpleModalOpen(false)}
        title="–ü—Ä–æ—Å—Ç–∞—è –º–æ–¥–∞–ª–∫–∞"
      >
        <div style={{ padding: "20px", textAlign: "center" }}>
          <p>–≠—Ç–æ –ø—Ä–æ—Å—Ç–∞—è –º–æ–¥–∞–ª–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!</p>
          <Button
            className={buttonClasses.defaultButtonBlue}
            label={<Label text="–ó–∞–∫—Ä—ã—Ç—å" />}
            onClick={() => setIsSimpleModalOpen(false)}
          />
        </div>
      </Modal>
    </div>
  );
};

export default TestPage;
